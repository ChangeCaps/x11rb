install:
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host i686-pc-windows-msvc --profile minimal
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -V
  - cargo -V
  - C:\cygwin\setup-x86.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --upgrade-also --root c:\cygwin --packages xorg-server-extra
  # This uses libc::mmap and thus is Unix-only
  - del examples\shared_memory.rs
  # HACK: Create a fake "shared_memory" because it is referenced in Cargo.toml
  - copy /b examples\simple_window.rs examples\shared_memory.rs

build: false
test_script:
  # Build once with the 'allow-unsafe-code' feature to
  # check that this works fine. Use 'check' instead of 'build' because
  # a full build requires the libxcb library
  - cargo check --verbose --all-targets --features all-extensions

  # Also build once without any feature
  - cargo check --verbose --all-targets

  # We do not have libxcb and thus cannot build XCBConnection
  - cargo build --verbose --all-targets --features all-extensions
  - cargo test --verbose --features all-extensions
  - cargo doc --verbose --features all-extensions

  # Start an X11 server in the background
  - ps: $Server = Start-Process -PassThru -FilePath C:\cygwin\bin\Xvfb.exe -ArgumentList "-listen tcp :0"
  - set "DISPLAY=127.0.0.1:0"
  - set "X11RB_EXAMPLE_TIMEOUT=1"

  # FIXME: Can this list be automated? somehow?
  - cargo run --verbose --features all-extensions --example check_unchecked_requests
  - cargo run --verbose --features all-extensions --example generic_events
  - cargo run --verbose --features all-extensions --example hypnomoire
  - cargo run --verbose --features all-extensions --example list_fonts
  - cargo run --verbose --features all-extensions --example simple_window
  - cargo run --verbose --features all-extensions --example simple_window_manager
  #- cargo run --verbose --features all-extensions --example tutorial
  - cargo run --verbose --features all-extensions --example xeyes

on_finish:
  - ps: Stop-Process -Id $Server.Id
